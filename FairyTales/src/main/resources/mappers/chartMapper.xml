<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="global.sesoc.fairytales.dao.ChartMapper">
	
	<!-- 일본어 동화 챕터 전체 -->
	<select id="jpnChapter" resultType="Integer">
	SELECT
		SUM(fairy_chapter) as fairy_chapter
	FROM
		fairytales
	WHERE
		fairy_code = 'jp'
	</select>
	
	<!-- 일본어 진행 챕터-->
	<select id="jpnProgressed" parameterType="String" resultType="Integer">
	SELECT 
		SUM(mf.chapter) AS chapter
	FROM 
		member m
		, member_fairy mf
		, fairytales f
	WHERE 
		m.user_id = #{user_id}
		AND m.user_id = mf.user_id 
		AND mf.fairy_pk = f.fairy_pk
		AND f.fairy_code = 'jp'
	</select>
	
	<!-- JAVA 전체 챕터 -->
	<select id="javaChapter" resultType="Integer">
	SELECT
		SUM(fairy_chapter) AS fairy_chapter
	FROM
		fairytales
	WHERE
		fairy_code = 'cd'
	</select>
	
	<!-- JAVA 진행 챕터 -->
	<select id="javaProgressed" parameterType="String" resultType="Integer">
	SELECT 
		SUM(mf.chapter) AS chapter
	FROM 
		member m
		, member_fairy mf
		, fairytales f
	WHERE 
		m.user_id = #{user_id} 
		AND m.user_id = mf.user_id 
		AND mf.fairy_pk = f.fairy_pk
		AND f.fairy_code = 'cd'
	</select>
	
	<!-- 일본어 레벨별 진행 챕터 -->
	<select id="jpnLevelProgress" parameterType="String" resultType="Integer">
	SELECT    
	    DECODE(SUM(CHAPTER),null,0,SUM(CHAPTER)) AS CHAPTER
	FROM (
          SELECT
          		  F.FAIRY_LEVEL
        		, MF.CHAPTER
          FROM 
              FAIRYTALES F 
              LEFT OUTER JOIN (SELECT 
            					FAIRY_PK, CHAPTER 
                               FROM 
                             	 MEMBER_FAIRY
                               WHERE 
                             	 USER_ID = #{user_id}) MF
                ON F.FAIRY_PK = MF.FAIRY_PK
            	WHERE 
            		F.FAIRY_CODE = 'jp'
          )
    GROUP BY FAIRY_LEVEL
    ORDER BY FAIRY_LEVEL
	</select>
	
	<!-- JAVA 레벨별 진행 챕터 -->
	<select id="javaLevelProgress" parameterType="String" resultType="Integer">
	SELECT    
	    DECODE(SUM(CHAPTER),null,0,SUM(CHAPTER)) AS CHAPTER
	FROM (
          SELECT
          		  F.FAIRY_LEVEL
        		, MF.CHAPTER
          FROM 
              FAIRYTALES F 
              LEFT OUTER JOIN (SELECT 
            					FAIRY_PK, CHAPTER 
                               FROM 
                             	 MEMBER_FAIRY
                               WHERE 
                             	 USER_ID = #{user_id}) MF
                ON F.FAIRY_PK = MF.FAIRY_PK
            	WHERE 
            		F.FAIRY_CODE = 'cd'
          )
    GROUP BY FAIRY_LEVEL
    ORDER BY FAIRY_LEVEL
	</select>

	<!-- 일본어 동화별 진행 챕터 -->
	<select id="jpnFairyProgress" parameterType="String" resultType="Integer">
	SELECT
    	SUM(mf.chapter) AS chapter
	FROM 
    	member m
    	, member_fairy mf
    	, fairytales f
	WHERE 
    	m.user_id = #{user_id}
    	AND m.user_id = mf.user_id
    	AND f.fairy_code = 'jp'
    	AND mf.fairy_pk = f.fairy_pk
        	GROUP BY f.fairy_pk
	</select>
	
	<!-- JAVA 동화별 진행 챕터 -->
	<select id="javaFairyProgress" parameterType="String" resultType="Integer">
	SELECT
    	SUM(mf.chapter) AS chapter
	FROM 
    	member m
    	, member_fairy mf
    	, fairytales f
	WHERE 
    	m.user_id = #{user_id}
    	AND m.user_id = mf.user_id
    	AND f.fairy_code = 'cd'
    	AND mf.fairy_pk = f.fairy_pk
        	GROUP BY f.fairy_pk
	</select>
	<!-- NULL이 치환이 안되서 오류나면 CASE 써볼것 -->
	
	<!-- 일본어 문제수 -->
	<select id="jpnQuestion" resultType="Integer">
	SELECT    
   	 	sum(case when f.fairy_code = 'jp' then 1 else 0 end) as jpnAllQ
	FROM
   		fairytales f
    	, question q
	WHERE
    	f.fairy_pk = q.fairy_pk
	</select>
	<!-- <쓸 때  <![CDATA[조건식]]>이런 식으로 써야함 -->

	<!-- JAVA 문제수 -->
	<select id="javaQuestion" resultType="Integer">
	SELECT    
   	 	sum(case when f.fairy_code = 'cd' then 1 else 0 end) as javaAllQ
	FROM
   		fairytales f
    	, question q
	WHERE
    	f.fairy_pk = q.fairy_pk
	</select>
	
	<!-- 일본어 오답수 -->
	<select id="jpnWrong" parameterType="String" resultType="Integer">
	SELECT
    	sum(case when f.fairy_code = 'jp' then 1 else 0 end) as jpnWrong
	FROM
    	member m
    	, member_fairy mf
    	, fairytales f
    	, question q
    	, wrong w
	WHERE
    	m.user_id = #{user_id}
    	AND m.user_id = mf.user_id
    	AND mf.fairy_pk = f.fairy_pk
    	AND mf.mf_pk = w.mf_pk
    	AND q.question_pk = w.question_pk
	</select>
	
	<!-- JAVA 오답수 -->
	<select id="javaWrong" parameterType="String" resultType="Integer">
	SELECT
    	sum(case when f.fairy_code = 'cd' then 1 else 0 end) as javaWrong
	FROM
    	member m
    	, member_fairy mf
    	, fairytales f
    	, question q
    	, wrong w
	WHERE
    	m.user_id = #{user_id}
    	AND m.user_id = mf.user_id
    	AND mf.fairy_pk = f.fairy_pk
    	AND mf.mf_pk = w.mf_pk
    	AND q.question_pk = w.question_pk
	</select>
	
	<!-- 일본어 레벨별 문제수 -->
	<select id="jpnLevelQuestion" resultType="Integer">
	SELECT    
    	sum(case when f.fairy_code = 'jp' then 1 else 0 end) as jpnlevelq
	FROM
    	fairytales f
    	, question q
	WHERE
    	f.fairy_pk = q.fairy_pk
    GROUP BY fairy_level
    </select>
    
    <!-- JAVA 레벨별 문제수 -->
	<select id="javaLevelQuestion" resultType="Integer">
	SELECT    
    	sum(case when f.fairy_code = 'cd' then 1 else 0 end) as javalevelq
	FROM
    	fairytales f
    	, question q
	WHERE
    	f.fairy_pk = q.fairy_pk
    GROUP BY fairy_level
    </select>
    
    <!-- 일본어 레벨별 오답수 -->
    <select id="jpnLevelWrong" parameterType="String" resultType="Integer">
    SELECT
    	SUM(CASE WHEN f.fairy_code = 'jp' THEN 1 ELSE 0 END) AS jpnLevelWrong
	FROM
    	member m
    	, member_fairy mf
    	, fairytales f
    	, question q
    	, wrong w
	WHERE
    	m.user_id = #{user_id}
    	AND m.user_id = mf.user_id
    	AND mf.fairy_pk = f.fairy_pk
    	AND mf.mf_pk = w.mf_pk
    	AND q.question_pk = w.question_pk
        	GROUP BY f.fairy_level
    </select>
    
    <!-- JAVA 레벨별 오답수 -->
    <select id="javaLevelWrong" parameterType="String" resultType="Integer">
    SELECT
    	SUM(CASE WHEN f.fairy_code = 'cd' THEN 1 ELSE 0 END) AS javaLevelWrong
	FROM
    	member m
    	, member_fairy mf
    	, fairytales f
    	, question q
    	, wrong w
	WHERE
    	m.user_id = #{user_id}
    	AND m.user_id = mf.user_id
    	AND mf.fairy_pk = f.fairy_pk
    	AND mf.mf_pk = w.mf_pk
    	AND q.question_pk = w.question_pk
        	GROUP BY f.fairy_level
    </select>
	
	<!-- 이번달 출석률 -->
	<select id="attendThisMon" parameterType="String" resultType="Integer">
	SELECT 
		count(member_access) as member_access
    FROM
    	(
    	 SELECT 
			m.user_id
			, to_char(member_access,'YYYYMMDD') AS member_access
		 FROM
			member m
			, member_log ml
		 WHERE
        	m.user_id = #{user_id}
        	AND m.user_id = ml.user_id
        	AND ml.member_access BETWEEN TRUNC(ADD_MONTHS(TO_DATE(SYSDATE),-0)+1)-TO_CHAR(TO_DATE(SYSDATE),'DD')
                                        AND TRUNC(LAST_DAY(TO_DATE(SYSDATE)))
            	GROUP BY m.user_id, to_char(member_access,'YYYYMMDD'))
            	GROUP BY user_id
	</select>
	
	<!-- 한 달 전 출석횟수 -->
	<select id="oneMonAttend" parameterType="String" resultType="Integer">
	SELECT 
		count(member_access) as member_access
    FROM
    	(
    	 SELECT 
			m.user_id
			, to_char(member_access,'YYYYMMDD') AS member_access
		 FROM
			member m
			, member_log ml
		 WHERE
        	m.user_id = #{user_id}
        	AND m.user_id = ml.user_id
        	AND ml.member_access BETWEEN TRUNC(ADD_MONTHS(TO_DATE(SYSDATE),-1)+1)-TO_CHAR(ADD_MONTHS(TO_DATE(SYSDATE),-1),'DD')
                                    AND TRUNC(LAST_DAY(TO_DATE(ADD_MONTHS(TO_DATE(SYSDATE),-1))))
            	GROUP BY m.user_id, to_char(member_access,'YYYYMMDD'))
            	GROUP BY user_id
	</select>
	
	<select id="twoMonAttend" parameterType="String" resultType="Integer">
	SELECT 
		count(member_access) as member_access
    FROM
    	(
    	 SELECT 
			m.user_id
			, to_char(member_access,'YYYYMMDD') AS member_access
		 FROM
			member m
			, member_log ml
		 WHERE
        	m.user_id = #{user_id}
        	AND m.user_id = ml.user_id
        	AND ml.member_access BETWEEN TRUNC(ADD_MONTHS(TO_DATE(SYSDATE),-2)+1)-TO_CHAR(ADD_MONTHS(TO_DATE(SYSDATE),-1),'DD')
                                    AND TRUNC(LAST_DAY(TO_DATE(ADD_MONTHS(TO_DATE(SYSDATE),-2))))
            	GROUP BY m.user_id, to_char(member_access,'YYYYMMDD'))
            	GROUP BY user_id
	</select>
	
	<select id="threeMonAttend" parameterType="String" resultType="Integer">
	SELECT 
		count(member_access) as member_access
    FROM
    	(
    	 SELECT 
			m.user_id
			, to_char(member_access,'YYYYMMDD') AS member_access
		 FROM
			member m
			, member_log ml
		 WHERE
        	m.user_id = #{user_id}
        	AND m.user_id = ml.user_id
        	AND ml.member_access BETWEEN TRUNC(ADD_MONTHS(TO_DATE(SYSDATE),-3)+1)-TO_CHAR(ADD_MONTHS(TO_DATE(SYSDATE),-1),'DD')
                                    AND TRUNC(LAST_DAY(TO_DATE(ADD_MONTHS(TO_DATE(SYSDATE),-3))))
            	GROUP BY m.user_id, to_char(member_access,'YYYYMMDD'))
            	GROUP BY user_id
	</select>
	
	<select id="fourMonAttend" parameterType="String" resultType="Integer">
	SELECT 
		count(member_access) as member_access
    FROM
    	(
    	 SELECT 
			m.user_id
			, to_char(member_access,'YYYYMMDD') AS member_access
		 FROM
			member m
			, member_log ml
		 WHERE
        	m.user_id = #{user_id}
        	AND m.user_id = ml.user_id
        	AND ml.member_access BETWEEN TRUNC(ADD_MONTHS(TO_DATE(SYSDATE),-4)+1)-TO_CHAR(ADD_MONTHS(TO_DATE(SYSDATE),-1),'DD')
                                    AND TRUNC(LAST_DAY(TO_DATE(ADD_MONTHS(TO_DATE(SYSDATE),-4))))
            	GROUP BY m.user_id, to_char(member_access,'YYYYMMDD'))
            	GROUP BY user_id
	</select>
	
	<select id="fiveMonAttend" parameterType="String" resultType="Integer">
	SELECT 
		count(member_access) as member_access
    FROM
    	(
    	 SELECT 
			m.user_id
			, to_char(member_access,'YYYYMMDD') AS member_access
		 FROM
			member m
			, member_log ml
		 WHERE
        	m.user_id = #{user_id}
        	AND m.user_id = ml.user_id
        	AND ml.member_access BETWEEN TRUNC(ADD_MONTHS(TO_DATE(SYSDATE),-5)+1)-TO_CHAR(ADD_MONTHS(TO_DATE(SYSDATE),-1),'DD')
                                    AND TRUNC(LAST_DAY(TO_DATE(ADD_MONTHS(TO_DATE(SYSDATE),-5))))
            	GROUP BY m.user_id, to_char(member_access,'YYYYMMDD'))
            	GROUP BY user_id	
	</select>
	
	<select id="sixMonAttend" parameterType="String" resultType="Integer">
	SELECT 
		count(member_access) as member_access
    FROM
    	(
    	 SELECT 
			m.user_id
			, to_char(member_access,'YYYYMMDD') AS member_access
		 FROM
			member m
			, member_log ml
		 WHERE
        	m.user_id = #{user_id}
        	AND m.user_id = ml.user_id
        	AND ml.member_access BETWEEN TRUNC(ADD_MONTHS(TO_DATE(SYSDATE),-6)+1)-TO_CHAR(ADD_MONTHS(TO_DATE(SYSDATE),-1),'DD')
                                    AND TRUNC(LAST_DAY(TO_DATE(ADD_MONTHS(TO_DATE(SYSDATE),-6))))
            	GROUP BY m.user_id, to_char(member_access,'YYYYMMDD'))
            	GROUP BY user_id
	</select>
	
</mapper>